# df <- as.data.frame(read.table('C:/Users/Sergio Diaz/OneDrive/Documentos/China report/Data-CN.csv', sep=",", header=TRUE))
df <- as.data.frame(read.table('C:/Users/Sergio Diaz/OneDrive/Documentos/China report/Pollfish_Survey_2023-CN-ZH-1000-v3.csv', sep=",", header=TRUE))
CN = df
nrow(CN)
# df <- as.data.frame(read.table('C:/Users/Sergio Diaz/OneDrive/Documentos/China report/Data-CN.csv', sep=",", header=TRUE))
df <- as.data.frame(read.table('C:/Users/Sergio Diaz/OneDrive/Documentos/China report/Pollfish_Survey_2023-CN-ZH-1000-v3.csv', sep=",", header=TRUE))
CN = df
nrow(CN)
df <- read.table('C:/Users/Sergio Diaz/OneDrive/Documentos/China report/Pollfish_Survey_2023-CN-ZH-1000-v3.csv', sep=",", header=TRUE)
nrow(df)
library("readxl")
df = read_xlsx('C:/Users/Sergio Diaz/OneDrive/Documentos/China report/Pollfish_Survey_2023-CN-ZH-1000-v3.xlsx')
df = read_xlsx('C:/Users/Sergio Diaz/OneDrive/Documentos/China report/Pollfish_Survey_2023-CN-ZH-1000-v3')
df = read_xlsx('C:/Users/Sergio Diaz/OneDrive/Documentos/China report/Pollfish_Survey_2023-CN-ZH-1000-v3.')
CN = df
df = read_xlsx('C:/Users/Sergio Diaz/OneDrive/Documentos/China report/CN.xlsx')
# df <- as.data.frame(read.table('C:/Users/Sergio Diaz/OneDrive/Documentos/China report/Data-CN.csv', sep=",", header=TRUE))
df <- as.data.frame(read.table('C:/Users/Sergio Diaz/OneDrive/Documentos/China report/Pollfish_Survey_2023-CN-ZH-1000-v3.csv', sep=",", header=TRUE))
df <- read.table('C:/Users/Sergio Diaz/OneDrive/Documentos/China report/Pollfish_Survey_2023-CN-ZH-1000-v3.csv', sep=",", header=TRUE)
df = read_xlsx('C:/Users/Sergio Diaz/OneDrive/Documentos/China report/CN.xlsx')
df = read_xlsx('C:/Users/Sergio Diaz/OneDrive/Documentos/China report/CH-v3.xlsx')
nrow(df)
df
df = read_xlsx('C:/Users/Sergio Diaz/OneDrive/Documentos/China report/Pollfish_Survey_2023-CN-ZH-1000-v3_346210215.xlsx')
nrow(df)
df = read_xlsx('C:/Users/Sergio Diaz/OneDrive/Documentos/China report/CH.xlsx')
nrow(df)
df$Q1
df$Q2
df[,15]
df[,16]
colnames(df)
df[,31]
df[,37]
# df <- as.data.frame(read.table('C:/Users/Sergio Diaz/OneDrive/Documentos/China report/Data-CN.csv', sep=",", header=TRUE))
# df <- as.data.frame(read.table('C:/Users/Sergio Diaz/OneDrive/Documentos/China report/Pollfish_Survey_2023-CN-ZH-1000-v3.csv', sep=",", header=TRUE))
# df <- read.table('C:/Users/Sergio Diaz/OneDrive/Documentos/China report/Pollfish_Survey_2023-CN-ZH-1000-v3.csv', sep=",", header=TRUE)
df = read_xlsx('C:/Users/Sergio Diaz/OneDrive/Documentos/China report/CH.xlsx')
CN = df
###########
# Region
Region = "Jiangsu"
dg = CN %>% filter(Area == Region)
dg = dg[,32:37]
samp = nrow(dg)# NA filter
colnames(dg) = c('sick_month','hosp_month', 'deaths_month', 'sick_today', 'sick_7d', 'vacc' )
for (j in 1:ncol(dg)) {
cat(colnames(dg)[j],sum(dg[,j])/(nrow(dg)*15), '\n')
}
dg = as.numeric(dg[,32:37])
samp = nrow(dg)# NA filter
colnames(dg) = c('sick_month','hosp_month', 'deaths_month', 'sick_today', 'sick_7d', 'vacc' )
dg = CN %>% filter(Area == Region)
dg = as.numeric(dg[,32:37])
dg = dg[,32:37]
samp = nrow(dg)# NA filter
colnames(dg) = c('sick_month','hosp_month', 'deaths_month', 'sick_today', 'sick_7d', 'vacc' )
cat(colnames(dg)[j],sum(dg[,j])/(nrow(dg)*15), '\n')
for (j in 1:ncol(dg)) {
cat(colnames(dg)[j],sum(as.numeric(dg[,j]))/(nrow(dg)*15), '\n')
}
for (j in 1:ncol(dg)) {
cat(colnames(dg)[j],sum(as.numeric(unlist(dg[,j])))/(nrow(dg)*15), '\n')
}
##########
# City
city = "Shanghai"
dg = CN %>% filter(City == city)
dg = dg[,15:20]
samp = nrow(dg)
colnames(dg) = c('sick_month','hosp_month', 'deaths_month', 'sick_today', 'sick_7d', 'vacc' )
for (j in 1:ncol(dg)) {
cat(colnames(dg)[j],sum(dg[,j])/(nrow(dg)*15), '\n')
}
dg = dg %>% filter(sick_month >= deaths_month & sick_month >= hosp_month & sick_month >= sick_7d &
sick_month>= sick_today )
dg = CN %>% filter(City == city)
dg = dg[,15:20]
samp = nrow(dg)
colnames(dg) = c('sick_month','hosp_month', 'deaths_month', 'sick_today', 'sick_7d', 'vacc' )
for (j in 1:ncol(dg)) {
cat(colnames(dg)[j],sum(as.numeric(unlist(dg[,j])))/(nrow(dg)*15), '\n')
}
dg = dg %>% filter(sick_month >= deaths_month & sick_month >= hosp_month & sick_month >= sick_7d &
sick_month>= sick_today )
library(dplyr)
library("readxl")
###############
# UK
df <- as.data.frame(read.table('C:/Users/Sergio Diaz/OneDrive/Documentos/China report/Data-UK.csv', sep=",", header=TRUE))
nrow(df)
########################
# Australia
df <- as.data.frame(read.table('C:/Users/Sergio Diaz/OneDrive/Documentos/China report/Data-AU.csv', sep=",", header=TRUE))
AU = df %>% select(starts_with('Think') | starts_with('From'))
########################
# Australia
df <- as.data.frame(read.table('C:/Users/Sergio Diaz/OneDrive/Documentos/China report/Data-AU.csv', sep=",", header=TRUE))
nrow(df)
# df <- as.data.frame(read.table('C:/Users/Sergio Diaz/OneDrive/Documentos/China report/Data-CN.csv', sep=",", header=TRUE))
# df <- as.data.frame(read.table('C:/Users/Sergio Diaz/OneDrive/Documentos/China report/Pollfish_Survey_2023-CN-ZH-1000-v3.csv', sep=",", header=TRUE))
# df <- read.table('C:/Users/Sergio Diaz/OneDrive/Documentos/China report/Pollfish_Survey_2023-CN-ZH-1000-v3.csv', sep=",", header=TRUE)
df = read_xlsx('C:/Users/Sergio Diaz/OneDrive/Documentos/China report/CH.xlsx')
CN = df
###########
# Region
Region = "Jiangsu"
dg = CN %>% filter(Area == Region)
dg = dg[,32:37]
samp = nrow(dg)# NA filter
colnames(dg) = c('sick_month','hosp_month', 'deaths_month', 'sick_today', 'sick_7d', 'vacc' )
for (j in 1:ncol(dg)) {
cat(colnames(dg)[j],sum(as.numeric(unlist(dg[,j])))/(nrow(dg)*15), '\n')
}
dg = dg %>% filter(sick_month >= deaths_month & sick_month >= hosp_month & sick_month >= sick_7d &
sick_month>= sick_today )
for (j in 1:ncol(dg)) {
cat(colnames(dg)[j],sum(as.numeric(unlist(dg[,j])))/(nrow(dg)*15), '\n')
}
cat('Sample: ', samp, '\n')
cat('Sample + Inconsistency filter: ', nrow(dg), '\n')
cat ('Outliers: ', samp-nrow(dg), '\n')
##########
# City
city = "Shanghai"
dg = CN %>% filter(City == city)
dg = dg[,15:20]
samp = nrow(dg)
colnames(dg) = c('sick_month','hosp_month', 'deaths_month', 'sick_today', 'sick_7d', 'vacc' )
for (j in 1:ncol(dg)) {
cat(colnames(dg)[j],sum(as.numeric(unlist(dg[,j])))/(nrow(dg)*15), '\n')
}
dg = dg[,15:20]
colnames(dg) = c('sick_month','hosp_month', 'deaths_month', 'sick_today', 'sick_7d', 'vacc' )
dg = CN %>% filter(City == city)
nrow(dg)
colnames(dg) = c('sick_month','hosp_month', 'deaths_month', 'sick_today', 'sick_7d', 'vacc' )
colnames(dg) = c('sick_month','hosp_month', 'deaths_month', 'sick_today', 'sick_7d', 'vacc' )
dg
dg = dg[,32:37]
dg
print(dg)
print(n=dg)
print(dg,n=32)
for (j in 1:ncol(dg)) {
cat(colnames(dg)[j],sum(as.numeric(unlist(dg[,j])))/(nrow(dg)*15), '\n')
}
# df <- as.data.frame(read.table('C:/Users/Sergio Diaz/OneDrive/Documentos/China report/Data-CN.csv', sep=",", header=TRUE))
# df <- as.data.frame(read.table('C:/Users/Sergio Diaz/OneDrive/Documentos/China report/Pollfish_Survey_2023-CN-ZH-1000-v3.csv', sep=",", header=TRUE))
# df <- read.table('C:/Users/Sergio Diaz/OneDrive/Documentos/China report/Pollfish_Survey_2023-CN-ZH-1000-v3.csv', sep=",", header=TRUE)
df = read_xlsx('C:/Users/Sergio Diaz/OneDrive/Documentos/China report/CH.xlsx')
CN = df
###########
# Region
Region = "Jiangsu"
dg = CN %>% filter(Area == Region)
dg = dg[,32:37]
samp = nrow(dg)# NA filter
colnames(dg) = c('sick_month','hosp_month', 'deaths_month', 'sick_today', 'sick_7d', 'vacc' )
for (j in 1:ncol(dg)) {
cat(colnames(dg)[j],sum(as.numeric(unlist(dg[,j])))/(nrow(dg)*15), '\n')
}
dg = dg %>% filter(sick_month >= deaths_month & sick_month >= hosp_month & sick_month >= sick_7d &
sick_month>= sick_today )
for (j in 1:ncol(dg)) {
cat(colnames(dg)[j],sum(as.numeric(unlist(dg[,j])))/(nrow(dg)*15), '\n')
}
cat('Sample: ', samp, '\n')
cat('Sample + Inconsistency filter: ', nrow(dg), '\n')
cat ('Outliers: ', samp-nrow(dg), '\n')
##########
# City
city = "Shanghai"
dg = CN %>% filter(City == city)
dg = dg[,15:20]
samp = nrow(dg)
colnames(dg) = c('sick_month','hosp_month', 'deaths_month', 'sick_today', 'sick_7d', 'vacc' )
for (j in 1:ncol(dg)) {
cat(colnames(dg)[j],sum(as.numeric(unlist(dg[,j])))/(nrow(dg)*15), '\n')
}
j=1
sum(as.numeric(unlist(dg[,j])))
unlist(dg[,j])
as.numeric(unlist(dg[,j]))
dg = CN %>% filter(City == city)
dg = dg[,32:37]
samp = nrow(dg)
colnames(dg) = c('sick_month','hosp_month', 'deaths_month', 'sick_today', 'sick_7d', 'vacc' )
for (j in 1:ncol(dg)) {
cat(colnames(dg)[j],sum(as.numeric(unlist(dg[,j])))/(nrow(dg)*15), '\n')
}
dg = dg %>% filter(sick_month >= deaths_month & sick_month >= hosp_month & sick_month >= sick_7d &
sick_month>= sick_today )
for (j in 1:ncol(dg)) {
cat(colnames(dg)[j],sum(as.numeric(unlist(dg[,j])))/(nrow(dg)*15), '\n')
}
cat('Sample: ', samp, '\n')
cat('Sample + Inconsistency filter: ', nrow(dg), '\n')
cat ('Outliers: ', samp-nrow(dg), '\n')
###############
# UK
df <- as.data.frame(read.table('C:/Users/Sergio Diaz/OneDrive/Documentos/China report/Data-UK.csv', sep=",", header=TRUE))
print(df.n=200)
print(df,n=200)
print(df)
###############
# UK
df <- as.data.frame(read.table('C:/Users/Sergio Diaz/OneDrive/Documentos/China report/Data-UK.csv', sep=",", header=TRUE))
UK = df %>% select(starts_with('Think') |starts_with('From'))
print(UK)
colnames(UK) = c('sick_month','hosp_month', 'deaths_month', 'sick_today', 'sick_7d', 'vacc' )
print(UK)
df = read_xlsx('C:/Users/Sergio Diaz/OneDrive/Documentos/China report/CH.xlsx')
CN = df
###########
# Region
Region = "Jiangsu"
Region = "Guangdong"
dg = CN %>% filter(Area == Region)
dg = dg[,32:37]
samp = nrow(dg)# NA filter
colnames(dg) = c('sick_month','hosp_month', 'deaths_month', 'sick_today', 'sick_7d', 'vacc' )
for (j in 1:ncol(dg)) {
cat(colnames(dg)[j],sum(as.numeric(unlist(dg[,j])))/(nrow(dg)*15), '\n')
}
dg = dg %>% filter(sick_month >= deaths_month & sick_month >= hosp_month & sick_month >= sick_7d &
sick_month>= sick_today )
for (j in 1:ncol(dg)) {
cat(colnames(dg)[j],sum(as.numeric(unlist(dg[,j])))/(nrow(dg)*15), '\n')
}
cat('Sample: ', samp, '\n')
cat('Sample + Inconsistency filter: ', nrow(dg), '\n')
cat ('Outliers: ', samp-nrow(dg), '\n')
cat('Sample: ', samp, '\n')
cat('Sample + Inconsistency filter: ', nrow(dg), '\n')
cat ('Outliers: ', samp-nrow(dg), '\n')
cat('Sample: ', samp, '\n')
cat('Sample + Inconsistency filter: ', nrow(dg), '\n')
cat ('Outliers: ', samp-nrow(dg), '\n')
s=paste0('Sample: ', samp, '\n')
s=paste0(s,'Sample + Inconsistency filter: ', nrow(dg), '\n')
s=paste0(s,'Outliers: ', samp-nrow(dg), '\n')
cat(s)
##########
# City
city = "Shanghai"
dg = CN %>% filter(City == city)
dg = dg[,32:37]
samp = nrow(dg)
colnames(dg) = c('sick_month','hosp_month', 'deaths_month', 'sick_today', 'sick_7d', 'vacc' )
for (j in 1:ncol(dg)) {
cat(colnames(dg)[j],sum(as.numeric(unlist(dg[,j])))/(nrow(dg)*15), '\n')
}
dg = dg %>% filter(sick_month >= deaths_month & sick_month >= hosp_month & sick_month >= sick_7d &
sick_month>= sick_today )
for (j in 1:ncol(dg)) {
cat(colnames(dg)[j],sum(as.numeric(unlist(dg[,j])))/(nrow(dg)*15), '\n')
}
s=paste0('Sample: ', samp, '\n')
s=paste0(s,'Sample + Inconsistency filter: ', nrow(dg), '\n')
s=paste0(s,'Outliers: ', samp-nrow(dg), '\n')
cat(s)
########################
# Australia
df <- as.data.frame(read.table('C:/Users/Sergio Diaz/OneDrive/Documentos/China report/Data-AU.csv', sep=",", header=TRUE))
AU = df %>% select(starts_with('Think') | starts_with('From'))
colnames(AU) = c('sick_month', 'hosp_month', 'deaths_month', 'sick_today', 'sick_7d', 'vacc' )
samp = nrow(AU)
s= ''
for (j in 1:ncol(AU)) {
s=paste0(s,colnames(AU)[j],' : ',sum(AU[,j])/(nrow(AU)*15), '\n')
}
cat(s)
###############
# UK
df <- as.data.frame(read.table('C:/Users/Sergio Diaz/OneDrive/Documentos/China report/Data-UK.csv', sep=",", header=TRUE))
UK = df %>% select(starts_with('Think') |starts_with('From'))
colnames(UK) = c('sick_month','hosp_month', 'deaths_month', 'sick_today', 'sick_7d', 'vacc' )
samp =nrow(UK)
s = ''
for (j in 1:ncol(UK)) {
s = paste0(s,colnames(UK)[j],' : ',sum(UK[,j])/(nrow(UK)*15), '\n')
}
cat(s)
country = 'UK'
df <- as.data.frame(read.table(paste0('C:/Users/Sergio Diaz/OneDrive/Documentos/China report/Data-', country,'.csv'), sep=",", header=TRUE))
dg = df %>% select(starts_with('Think') |starts_with('From'))
colnames(dg) = c('sick_month','hosp_month', 'deaths_month', 'sick_today', 'sick_7d', 'vacc' )
samp =nrow(dg)
s = ''
for (j in 1:ncol(dg)) {
s = paste0(s,colnames(dg)[j],' : ',sum(dg[,j])/(nrow(dg)*15), '\n')
}
cat(s)
# Filter
dg = dg %>% filter(sick_month >= deaths_month & sick_month >= hosp_month & sick_month >= sick_7d &
sick_month>= sick_today )
s = ''
for (j in 1:ncol(dg)) {
s = paste0(s,colnames(dg)[j],' : ',sum(dg[,j])/(nrow(dg)*15), '\n')
}
cat(s)
country = 'AU'
df <- as.data.frame(read.table(paste0('C:/Users/Sergio Diaz/OneDrive/Documentos/China report/Data-', country,'.csv'), sep=",", header=TRUE))
dg = df %>% select(starts_with('Think') |starts_with('From'))
colnames(dg) = c('sick_month','hosp_month', 'deaths_month', 'sick_today', 'sick_7d', 'vacc' )
samp =nrow(dg)
s = ''
for (j in 1:ncol(dg)) {
s = paste0(s,colnames(dg)[j],' : ',sum(dg[,j])/(nrow(dg)*15), '\n')
}
cat(s)
# Filter
dg = dg %>% filter(sick_month >= deaths_month & sick_month >= hosp_month & sick_month >= sick_7d &
sick_month>= sick_today )
s = ''
for (j in 1:ncol(dg)) {
s = paste0(s,colnames(dg)[j],' : ',sum(dg[,j])/(nrow(dg)*15), '\n')
}
cat(s)
s = paste0('Sample: ', samp, '\n')
s = paste0(s,'Sample + Inconsistency filter: ', nrow(dg), '\n')
s = paste0(s,'Outliers: ', samp-nrow(dg), '\n')
cat(s)
country = 'UK'
df <- as.data.frame(read.table(paste0('C:/Users/Sergio Diaz/OneDrive/Documentos/China report/Data-', country,'.csv'), sep=",", header=TRUE))
dg = df %>% select(starts_with('Think') |starts_with('From'))
colnames(dg) = c('sick_month','hosp_month', 'deaths_month', 'sick_today', 'sick_7d', 'vacc' )
samp =nrow(dg)
s = ''
for (j in 1:ncol(dg)) {
s = paste0(s,colnames(dg)[j],' : ',sum(dg[,j])/(nrow(dg)*15), '\n')
}
cat(s)
# Filter
dg = dg %>% filter(sick_month >= deaths_month & sick_month >= hosp_month & sick_month >= sick_7d &
sick_month>= sick_today )
s = ''
for (j in 1:ncol(dg)) {
s = paste0(s,colnames(dg)[j],' : ',sum(dg[,j])/(nrow(dg)*15), '\n')
}
cat(s)
s = paste0('Sample: ', samp, '\n')
s = paste0(s,'Sample + Inconsistency filter: ', nrow(dg), '\n')
s = paste0(s,'Outliers: ', samp-nrow(dg), '\n')
cat(s)
country = 'UK'
df <- as.data.frame(read.table(paste0('C:/Users/Sergio Diaz/OneDrive/Documentos/China report/Data-', country,'.csv'), sep=",", header=TRUE))
dg = df %>% select(starts_with('Think') |starts_with('From'))
colnames(dg) = c('sick_month','hosp_month', 'deaths_month', 'sick_today', 'sick_7d', 'vacc' )
samp =nrow(dg)
s = ''
for (j in 1:ncol(dg)) {
s = paste0(s,colnames(dg)[j],' : ',sum(dg[,j])/(nrow(dg)*15), '\n')
}
cat(s)
library(dplyr)
library("readxl")
country = 'UK'
df <- as.data.frame(read.table(paste0('C:/Users/Sergio Diaz/OneDrive/Documentos/China report/Data-', country,'.csv'), sep=",", header=TRUE))
dg = df %>% select(starts_with('Think') |starts_with('From'))
colnames(dg) = c('sick_month','hosp_month', 'deaths_month', 'sick_today', 'sick_7d', 'vacc' )
samp =nrow(dg)
s = ''
for (j in 1:ncol(dg)) {
s = paste0(s,colnames(dg)[j],' : ',sum(dg[,j])/(nrow(dg)*15), '\n')
}
cat(s)
# Filter
dg = dg %>% filter(sick_month >= deaths_month & sick_month >= hosp_month & sick_month >= sick_7d &
sick_month>= sick_today )
s = ''
for (j in 1:ncol(dg)) {
s = paste0(s,colnames(dg)[j],' : ',sum(dg[,j])/(nrow(dg)*15), '\n')
}
cat(s)
s = paste0('Sample: ', samp, '\n')
s = paste0(s,'Sample + Inconsistency filter: ', nrow(dg), '\n')
s = paste0(s,'Outliers: ', samp-nrow(dg), '\n')
cat(s)
s = paste0('Sample: ', samp, '\n')
s = paste0(s,'Sample + Inconsistency filter: ', nrow(dg), '\n')
s = paste0(s,'Outliers: ', samp-nrow(dg), '\n')
cat(s)
country = 'AU'
df <- as.data.frame(read.table(paste0('C:/Users/Sergio Diaz/OneDrive/Documentos/China report/Data-', country,'.csv'), sep=",", header=TRUE))
dg = df %>% select(starts_with('Think') |starts_with('From'))
colnames(dg) = c('sick_month','hosp_month', 'deaths_month', 'sick_today', 'sick_7d', 'vacc' )
samp =nrow(dg)
s = ''
for (j in 1:ncol(dg)) {
s = paste0(s,colnames(dg)[j],' : ',sum(dg[,j])/(nrow(dg)*15), '\n')
}
cat(s)
# Filter
dg = dg %>% filter(sick_month >= deaths_month & sick_month >= hosp_month & sick_month >= sick_7d &
sick_month>= sick_today )
s = ''
for (j in 1:ncol(dg)) {
s = paste0(s,colnames(dg)[j],' : ',sum(dg[,j])/(nrow(dg)*15), '\n')
}
cat(s)
s = paste0('Sample: ', samp, '\n')
s = paste0(s,'Sample + Inconsistency filter: ', nrow(dg), '\n')
s = paste0(s,'Outliers: ', samp-nrow(dg), '\n')
cat(s)
df = read_xlsx('C:/Users/Sergio Diaz/OneDrive/Documentos/China report/CH.xlsx')
CN = df
###########
# Region
Region = "Jiangsu"
df = read_xlsx('C:/Users/Sergio Diaz/OneDrive/Documentos/China report/CH.xlsx')
CN = df
source("~/NSUM Simulations/nsum_functions.R")
source("~/NSUM Simulations/initial_data.R")
source("~/NSUM Simulations/pop_functions.R")
pop_disjoint_sir_pa <- readRDS("~/NSUM Simulations/Robjects/pop_disjoint_sir_pa.rds")
pop_sir_pa <- readRDS("~/NSUM Simulations/Robjects/pop_sir_pa.rds")
pop_disjoint_uniform_pa <- readRDS("~/NSUM Simulations/Robjects/pop_disjoint_uniform_pa.rds")
pop_uniform_pa <- readRDS("~/NSUM Simulations/Robjects/pop_uniform_pa.rds")
pop_disjoint_sir_sw <- readRDS("~/NSUM Simulations/Robjects/pop_disjoint_sir_sw.rds")
pop_sir_sw <- readRDS("~/NSUM Simulations/Robjects/pop_sir_sw.rds")
pop_disjoint_uniform_sw <- readRDS("~/NSUM Simulations/Robjects/pop_disjoint_uniform_sw.rds")
pop_uniform_sw <- readRDS("~/NSUM Simulations/Robjects/pop_uniform_sw.rds")
Population = pop_disjoint_sir_sw
getNh_Maltiel(Population[gen_Survey(n_survey,Population),],v_pop_prob,N)
library(networkscaleup)
help("networkscaleup")
exp(11)
exp(10.75)
log(10^6)
108/12
log(4)/log(47000)
0.12*75
log(2)/log(47000)
log(4)/log(47000)
log(4)/log(47000)*12
log(4)*12
source('~data/initial data/initial_data.R')
source('~/GitHub/NSUM-Simulations/data/initial data/initial_data.R')
N
source('~/GitHub/NSUM-Simulations/code/data generation/pop_functions.R')
source('~/GitHub/NSUM-Simulations/data/initial data/initial_data.R')
source('~/GitHub/NSUM-Simulations/code/data generation/pop_functions.R')
hps = c('uniform', 'sir')
nets = c('sw', 'pa')
net = nets[1]
hpdistrib = hps[1]
parameters = seq(from = 0.1, to = 1, length.out = 10)
Population = readRDS(paste0('~/GitHub/NSUM-Simulations/data/initial data/pop_',hpdistrib,'_',net,'.rds'))
net_sw = readRDS(paste0('~/GitHub/NSUM-Simulations/data/initial data/Net_',net,'.rds'))
Mhp_vis = readRDS(paste0('~/GitHub/NSUM-Simulations/data/initial data/mat_',hpdistrib,'_',net,'.rds'))
v_pop_total = getV_pop(n_pop,Population)
Mhp_vis
# set.seed(922)
net = readRDS('~/GitHub/NSUM-Simulations/data/initial data/Net_sw.rds')
Graph_population_matrix = gen_Data_uniform(N, v_pop_prob, hp_prob, visibility_factor, memory_factor, sub_memory_factor, net = net)
# hpdistrib = 'uniform'
hpdistrib = 'sir'
net = 'sw'
# net='pa
Population = readRDS(paste0('~/GitHub/NSUM-Simulations/data/initial data/pop_',hpdistrib,'_',net,'.rds'))
net_sw = readRDS(paste0('~/GitHub/NSUM-Simulations/data/initial data/Net_',net,'.rds'))
Mhp_vis = readRDS(paste0('~/GitHub/NSUM-Simulations/data/initial data/mat_',hpdistrib,'_',net,'.rds'))
v_pop_total = getV_pop(n_pop,Population)
source('~/GitHub/NSUM-Simulations/code/nsum/nsum_functions.R')
######################
setwd('~/GitHub/NSUM-Simulations/code/scenarios')
######################
setwd('~/GitHub/NSUM-Simulations/code/scenarios')
source('~/GitHub/NSUM-Simulations/code/data analysis/data_analysis_functions.R')
scenario = 'Subpopulation number'
sim_path = 'Simulation_numbersubpopulations'
scenario2 = 'Subpopulation number small'
sim_path2 = 'Simulation_numbersubpopulationssmall'
# network = 'sw'
network = 'pa'
hid_distrib = 'uniform'
library(dplyr)
library(matrixStats)
library(ggplot2)
library(stringr)
library(stats)
library(devtools)
library(ggmagnify)
######################
setwd('~/GitHub/NSUM-Simulations/code/scenarios')
source('~/GitHub/NSUM-Simulations/code/data analysis/data_analysis_functions.R')
scenario = 'Subpopulation number'
sim_path = 'Simulation_numbersubpopulations'
scenario2 = 'Subpopulation number small'
sim_path2 = 'Simulation_numbersubpopulationssmall'
# network = 'sw'
network = 'pa'
hid_distrib = 'uniform'
path = paste0('~/GitHub/NSUM-Simulations/code/scenarios/',scenario)
data_path = paste0(path,'/CSV/')
path2 = paste0('~/~/GitHub/NSUM-Simulations/code/scenarios/',scenario2)
data_path2 = paste0(path2,'/CSV/')
notdisj_path = paste0(data_path2,sim_path2,'_notdisjoint_',hid_distrib,'_',network,'.csv')
notdisj_path2 = paste0(data_path2,sim_path2,'_notdisjoint_',hid_distrib,'_',network,'.csv')
simulation_data = read.csv(notdisj_path)
simulation_data2 = read.csv(notdisj_path2)
tab = gen_df(simulation_data,"mean")
notdisj_path
path2 = paste0('~/GitHub/NSUM-Simulations/code/scenarios/',scenario2)
data_path2 = paste0(path2,'/CSV/')
notdisj_path = paste0(data_path2,sim_path2,'_notdisjoint_',hid_distrib,'_',network,'.csv')
notdisj_path2 = paste0(data_path2,sim_path2,'_notdisjoint_',hid_distrib,'_',network,'.csv')
simulation_data = read.csv(notdisj_path)
simulation_data2 = read.csv(notdisj_path2)
notdisj_path
